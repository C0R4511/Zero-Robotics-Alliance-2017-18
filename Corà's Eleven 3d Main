float Mystate[12], Mypos[3], MyVirPos[3], Myvel[3], Myatt[3], Myw[3], An0[3], An1[3], S[3], Zero[3], Rilascio[3], Coordinate[6][3], Minatore[3]; 
int n, contatorePerLaRotation, viaggio;

float quaternion[4];

void init(){
    //Ice zone z=0.48
    n = -1;
    contatorePerLaRotation = 0;
    
    viaggio = 0;
    
    api.getMyZRState(Mystate); 
    
    int c = Sign( Mystate[0] );
    
    Coordinate[0][0] = c*0.20f; // 0.20
    Coordinate[0][1] = c*0.20f;
    
    Coordinate[1][0] = c*0.12f; // 0.12
    Coordinate[1][1] = c*0.20;
    
    Coordinate[2][0] = c*0.04; // -0.12
    Coordinate[2][1] = c*0.20; // 0.12
    
    Coordinate[3][0] = c*(-0.04f); // 0.04
    Coordinate[3][1] = c*0.20f; // 0.04
    
    Coordinate[4][0] = c*(-0.12f); // -0.04
    Coordinate[4][1] = c*0.20;  // 0.04
    
    Coordinate[5][0] = 0.0f; // 0.0
    Coordinate[5][1] = 0.0f;
    
    An0[0]=0.30f; 
    An0[1]=-0.48f; 
    An0[2]=An1[2]=-0.16f; 
    An1[0]=-0.30f; 
    An1[1]=0.48f;
    
    Zero[0] = Zero[1] = Zero[2] = 0.0f;
    
    Rilascio[0] = 0.0;
	Rilascio[1] = 0.0f;
	Rilascio[2] = -1.0;
	
	// Per adesso inutile
	Minatore[0] = 1.0f;
	Minatore[1] = -2.0f;
	Minatore[2] = 0.0f;
	
	float data[13];
	api.getMySphState( data );
	quaternion[ 0 ] = data[ 6 ];
	quaternion[ 1 ] = data[ 7 ];
	quaternion[ 2 ] = data[ 8 ];
	quaternion[ 3 ] = data[ 9 ];
}

void loop()
{
    api.getMyZRState(Mystate); 
	
	for (int i=0; i<3; i++)
	{
	    Mypos[i] = Mystate[i];
	    Myvel[i] = Mystate[i+3];
	    Myatt[i] = Mystate[i+6];
	    Myw[i] = Mystate[i+9];
	    MyVirPos[i] = Mypos[i] + 2 * Myvel[i]; // posizione un secondo piu' tardi
	}
	
	//DEBUG(("Start case %d", n ));
	
	//DEBUG(( "Attitude quaternion vector x:%f y:%f z:%f ?:%f", quaternion[0], quaternion[1], quaternion[2], quaternion[3] ));
	
	if( n == -1 )
	{
	    GetSquareInS( Coordinate[viaggio] );
	    n = 0;
	}
	
	//if( n > -1 )
	//    ReachPos( S );
	    
	if( n == 0 )
	    if( mettiti_in_condizione_di_drillare() )
    	    n++;
	
	if(( n > 0) && ( n <= 3 ) && ( game.getNumSamplesHeld() != 5 ))
	    if( ruota_e_tira_su_i_minerali() )
	        n++;
	
	if( n == 4 )
	    if( game.getNumSamplesHeld() != 5 )
	    {
	        n = -1;
	        viaggio++;
	    }
    
    float m[2];
	m[0] = S[0];
	m[1] = S[1];	
    
	if(( n == 5 ) || ( game.getNumSamplesHeld() == 5 ) || game.isGeyserHere( m ) )
	{
	    contatorePerLaRotation = 0;
	    n = 5;
	    cambia_S_per_base_station();
	    if( rilascia_i_campioni_al_base_station() )
	        n = 6;
	    ReachPos( S );
	}
	
	if( n == 6 )
	{
	    n = -1;
	    viaggio++;
	}
	
	if(  game.getDrillError() )
	    game.stopDrill();
	    
	if((( api.getTime() > 165 ) || ( game.getFuelRemaining() < 0.18f )) && ( game.getNumSamplesHeld() > 0 ) )
	{
	    cambia_S_per_base_station();
	    n = 5;
	    ReachPos( S );
	    contatorePerLaRotation = 0;
	}
	
	
	//DEBUG(("End case %d", n ));
}
